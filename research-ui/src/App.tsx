import React, { useState } from 'react';
import { Search, FileText, Brain, Users, Loader2 } from 'lucide-react';
import './App.css';

interface ResearchResult {
  id: string;
  query: string;
  status: 'pending' | 'completed' | 'error';
  result?: string;
  timestamp: Date;
}

function App() {
  const [query, setQuery] = useState('');
  const [isResearching, setIsResearching] = useState(false);
  const [results, setResults] = useState<ResearchResult[]>([]);
  const [activeResult, setActiveResult] = useState<ResearchResult | null>(null);

  const sampleQueries = [
    "Analyze the cultural impact of K-pop music among Gen Z in the United States",
    "Research sustainable fashion trends among millennials in Europe",
    "Investigate the rise of plant-based food culture in urban markets",
    "Study gaming culture and esports adoption in Southeast Asia"
  ];

  const handleSubmit = async (e: React.FormEvent) => {
    e.preventDefault();
    if (!query.trim() || isResearching) return;

    const newResult: ResearchResult = {
      id: Date.now().toString(),
      query: query.trim(),
      status: 'pending',
      timestamp: new Date()
    };

    setResults(prev => [newResult, ...prev]);
    setActiveResult(newResult);
    setIsResearching(true);

    try {
      // Simulate API call to your research agency
      // In a real implementation, this would call your Python backend
      await new Promise(resolve => setTimeout(resolve, 3000));
      
      const mockResult = `# Research Report: ${query}

## Executive Summary
This comprehensive research analysis leverages both web intelligence and cultural insights from Qloo's API to provide actionable insights.

## Key Findings
- Cultural trend analysis shows significant engagement patterns
- Market opportunities identified across multiple demographics
- Consumer preference data indicates strong growth potential

## Cultural Intelligence Insights
*Powered by Qloo API*
- Demographic preferences align with emerging cultural movements
- Cross-cultural adoption patterns show promising expansion opportunities
- Brand partnership potential rated as high-opportunity

## Recommendations
1. Focus on authentic cultural engagement strategies
2. Leverage identified demographic preferences for targeted campaigns
3. Consider partnerships with culturally relevant influencers

*Report generated by Deep Research Agency with cultural intelligence*`;

      setResults(prev => 
        prev.map(r => 
          r.id === newResult.id 
            ? { ...r, status: 'completed', result: mockResult }
            : r
        )
      );
      
      setActiveResult(prev => 
        prev?.id === newResult.id 
          ? { ...prev, status: 'completed', result: mockResult }
          : prev
      );
    } catch (error) {
      setResults(prev => 
        prev.map(r => 
          r.id === newResult.id 
            ? { ...r, status: 'error', result: 'Research failed. Please try again.' }
            : r
        )
      );
    } finally {
      setIsResearching(false);
      setQuery('');
    }
  };

  const handleSampleQuery = (sampleQuery: string) => {
    setQuery(sampleQuery);
  };

  return (
    <div className="app">
      <header className="header">
        <div className="header-content">
          <div className="logo">
            <Brain className="logo-icon" />
            <h1>Deep Research Agency</h1>
          </div>
          <p className="tagline">AI-Powered Cultural Intelligence & Research</p>
        </div>
      </header>

      <main className="main">
        <div className="container">
          <div className="search-section">
            <form onSubmit={handleSubmit} className="search-form">
              <div className="search-input-container">
                <Search className="search-icon" />
                <input
                  type="text"
                  value={query}
                  onChange={(e) => setQuery(e.target.value)}
                  placeholder="Enter your research query..."
                  className="search-input"
                  disabled={isResearching}
                />
                <button 
                  type="submit" 
                  disabled={!query.trim() || isResearching}
                  className="search-button"
                >
                  {isResearching ? (
                    <Loader2 className="spinner" />
                  ) : (
                    'Research'
                  )}
                </button>
              </div>
            </form>

            <div className="sample-queries">
              <p className="sample-label">Try these cultural intelligence queries:</p>
              <div className="sample-grid">
                {sampleQueries.map((sample, index) => (
                  <button
                    key={index}
                    onClick={() => handleSampleQuery(sample)}
                    className="sample-query"
                    disabled={isResearching}
                  >
                    {sample}
                  </button>
                ))}
              </div>
            </div>
          </div>

          <div className="content-section">
            <div className="sidebar">
              <h3 className="sidebar-title">
                <FileText className="sidebar-icon" />
                Research History
              </h3>
              <div className="results-list">
                {results.length === 0 ? (
                  <p className="no-results">No research queries yet</p>
                ) : (
                  results.map((result) => (
                    <div
                      key={result.id}
                      onClick={() => setActiveResult(result)}
                      className={`result-item ${activeResult?.id === result.id ? 'active' : ''}`}
                    >
                      <div className="result-header">
                        <span className={`status-indicator ${result.status}`} />
                        <span className="result-time">
                          {result.timestamp.toLocaleTimeString()}
                        </span>
                      </div>
                      <p className="result-query">{result.query}</p>
                    </div>
                  ))
                )}
              </div>
            </div>

            <div className="main-content">
              {activeResult ? (
                <div className="research-display">
                  <div className="research-header">
                    <h2>Research Report</h2>
                    <div className="research-meta">
                      <Users className="meta-icon" />
                      <span>Multi-Agent Analysis</span>
                      <span className="separator">â€¢</span>
                      <span>Cultural Intelligence</span>
                    </div>
                  </div>
                  
                  {activeResult.status === 'pending' ? (
                    <div className="loading-state">
                      <Loader2 className="loading-spinner" />
                      <p>Agents are researching your query...</p>
                      <div className="agent-steps">
                        <div className="step active">Triage Agent analyzing query</div>
                        <div className="step">Building research instructions</div>
                        <div className="step">Gathering cultural insights</div>
                        <div className="step">Compiling final report</div>
                      </div>
                    </div>
                  ) : activeResult.status === 'error' ? (
                    <div className="error-state">
                      <p>Research failed. Please try again.</p>
                    </div>
                  ) : (
                    <div className="research-content">
                      <pre className="research-text">{activeResult.result}</pre>
                      <div className="research-actions">
                        <button className="action-button">
                          <FileText className="action-icon" />
                          Download PDF
                        </button>
                      </div>
                    </div>
                  )}
                </div>
              ) : (
                <div className="welcome-state">
                  <Brain className="welcome-icon" />
                  <h2>Welcome to Deep Research Agency</h2>
                  <p>
                    Powered by multi-agent AI and cultural intelligence from Qloo, 
                    our research agency provides comprehensive insights on cultural 
                    trends, consumer behavior, and market dynamics.
                  </p>
                  <div className="features">
                    <div className="feature">
                      <Users className="feature-icon" />
                      <h3>Multi-Agent Research</h3>
                      <p>Specialized agents work together to provide comprehensive analysis</p>
                    </div>
                    <div className="feature">
                      <Brain className="feature-icon" />
                      <h3>Cultural Intelligence</h3>
                      <p>Qloo API integration for deep cultural and consumer insights</p>
                    </div>
                    <div className="feature">
                      <FileText className="feature-icon" />
                      <h3>Professional Reports</h3>
                      <p>Detailed PDF reports ready for business use</p>
                    </div>
                  </div>
                </div>
              )}
            </div>
          </div>
        </div>
      </main>
    </div>
  );
}

export default App;